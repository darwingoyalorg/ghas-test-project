# Spring Boot application properties with secrets

# Server configuration
server.port=8080
server.servlet.context-path=/webapp

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
spring.datasource.username=dbuser
spring.datasource.password=MySecretDbPassword2024!
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=RedisSecretPassword123!

# JWT configuration
jwt.secret=myJWTSecretKey1234567890abcdef1234567890abcdef1234567890abcdef
jwt.expiration=86400000

# External API keys
openai.api.key=sk-abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234
stripe.api.key=sk_live_abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
sendgrid.api.key=SG.abcdef1234567890.abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# AWS configuration
aws.access.key.id=AKIAI44QH8DHBEXAMPLE
aws.secret.access.key=je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY
aws.region=us-west-2
aws.s3.bucket.name=my-test-bucket

# OAuth2 configuration
google.oauth2.client.id=123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com
google.oauth2.client.secret=GOCSPX-abcdef1234567890abcdef1234567890ab

# Slack integration
slack.bot.token=xoxb-1234567890-1234567890-abcdefghijklmnopqrstuvwx
slack.webhook.url=https://hooks.slack.com/services/T1234567890/B1234567890/abcdefghijklmnopqrstuvwx

# Email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=test@example.com
spring.mail.password=MyEmailPassword2024!
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Encryption key
app.encryption.key=1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12
